---
# Environment validation (runs on localhost first)
- name: Environment Validation
  hosts: localhost
  connection: local
  gather_facts: false

  tasks:
    # Environment validation and preparation (runs once for entire workflow)
    - import_tasks: includes/validate_environment.yml

# Deploy SSH Keys (runs on localhost first to generate keys and get user input)
- name: Deploy SSH Keys for Private Repositories
  import_playbook: deploy-ssh-keys.yml
  tags: ["ssh_keys", "deploy_apps"]

# Main deployment play (runs on remote servers)
- name: Deploy Caddy Proxy and Applications
  hosts: digitalocean
  become: true
  vars_files:
    - ../group_vars/all.yml
    - ../group_vars/prod.yml
  vars:
    # Enable verbose build output (set to true to see full Docker build logs)
    verbose_builds: "{{ verbose | default(false) }}"

  pre_tasks:
    - name: Display deployment mode
      debug:
        msg: |
          ðŸš€ Starting deployment...
          Verbose builds: {{ verbose_builds }}

          ðŸ’¡ For enhanced build visibility, run with:
          ansible-playbook playbooks/deploy-stack.yml -e verbose=true

          ðŸ”§ For troubleshooting, use:
          ansible-playbook playbooks/troubleshoot-apps.yml

    - name: Ensure Docker is running
      systemd:
        name: docker
        state: started
        enabled: true

    - name: Ensure user is in docker group
      user:
        name: "{{ server_user }}"
        groups: docker
        append: true

    - name: Install Docker Compose plugin
      package:
        name: docker-compose-plugin
        state: present

  roles:
    - role: caddy_proxy
      tags: ["caddy_proxy"]

    - role: deploy_apps
      tags: ["deploy_apps"]

  post_tasks:
    - name: Display deployment summary
      debug:
        msg: |
          ðŸŽ‰ Deployment Complete!

          Caddy Proxy:
          - Running on ports 80/443
          - Automatic TLS certificates
          - Network: {{ caddy_network_name }}

          Applications Deployed:
          {% for app in apps %}
          - {{ app.name }}: https://{{ app.hostname | default(app.name + '.' + ansible_default_ipv4.address + '.nip.io') }}
          {% endfor %}

          To add new applications:
          1. Add to apps list in group_vars/prod.yml
          2. Run: ansible-playbook playbooks/deploy-stack.yml --tags deploy_apps
      tags: ["always"]
