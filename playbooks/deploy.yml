---
# Environment validation (optional, for first-time setups)
- name: Environment Validation
  hosts: localhost
  connection: local
  gather_facts: false
  tags: ["validate", "infrastructure"]

  tasks:
    - import_tasks: includes/validate_environment.yml
      when: infrastructure_setup | default(false) or validate_environment | default(false)

# Deploy SSH Keys for Private Repositories (if needed)
- name: Deploy SSH Keys for Private Repositories
  import_playbook: deploy-ssh-keys.yml
  tags: ["ssh_keys"]

# Infrastructure and Application deployment
- name: Deploy Infrastructure and Applications
  hosts: digitalocean
  become: true
  vars_files:
    - ../group_vars/all.yml
    - ../group_vars/prod.yml
  vars:
    # Default deployment mode
    deployment_mode: "{{ mode | default('normal') }}" # normal, branch, rollback
    deploy_branch: "{{ branch | default('main') }}"
    target_release: "{{ release | default('previous') }}"
    verbose_builds: "{{ verbose | default(false) }}"

    # Infrastructure setup flags
    setup_infrastructure: "{{ infrastructure_setup | default(false) }}"
    setup_caddy: "{{ caddy_setup | default(setup_infrastructure) }}"

    # Legacy support for single app deployment (deprecated)
    legacy_app: "{{ app | default('') }}"

  pre_tasks:
    - name: Handle legacy app parameter (backward compatibility)
      set_fact:
        apps_to_deploy: "{{ legacy_app }}"
      when: legacy_app != "" and apps_to_deploy is not defined

    - name: Display deployment configuration
      debug:
        msg: |
          🚀 Enhanced Deployment Configuration:

          Deployment Mode: {{ deployment_mode }}
          Infrastructure Setup: {{ setup_infrastructure }}
          Caddy Proxy Setup: {{ setup_caddy }}
          {% if apps_to_deploy is defined and apps_to_deploy != "" %}
          Target Apps: {{ apps_to_deploy }}
          {% elif deploy_mode is defined %}
          Deploy Mode: {{ deploy_mode }}
          {% else %}
          Target Apps: All applications
          {% endif %}
          {% if deployment_mode == 'branch' %}
          Deploy Branch: {{ deploy_branch }}
          {% elif deployment_mode == 'rollback' %}
          Rollback Target: {{ target_release }}
          {% endif %}
          Verbose Builds: {{ verbose_builds }}

          Available Apps:
          {% for app in apps %}
          - {{ app.name }}: {{ app.repo }} ({{ app.branch | default('main') }})
          {% endfor %}

          💡 Infrastructure flags:
          # Full setup: -e infrastructure_setup=true
          # Caddy only: -e caddy_setup=true
          # Apps only: (no flags, default)

    - name: Ensure Docker is running
      systemd:
        name: docker
        state: started
        enabled: true

    - name: Ensure user is in docker group
      user:
        name: "{{ server_user }}"
        groups: docker
        append: true

    - name: Install Docker Compose plugin (if infrastructure setup)
      package:
        name: docker-compose-plugin
        state: present
      when: setup_infrastructure
      tags: ["infrastructure"]

  roles:
    - role: caddy_proxy
      when: setup_caddy
      tags: ["caddy_proxy", "infrastructure"]

    - role: deploy_apps
      tags: ["deploy_apps"]

  post_tasks:
    - name: Display deployment summary
      debug:
        msg: |
          🎉 Enhanced Deployment Complete!

          {% if setup_infrastructure %}
          🏗️  Infrastructure Setup:
          ✅ Docker and Docker Compose configured
          {% if setup_caddy %}
          ✅ Caddy Proxy running (HTTP/HTTPS on ports 80/443)
          ✅ Proxy network: {{ caddy_network_name | default('proxy') }}
          {% endif %}

          {% endif %}
          {% if deployment_mode == 'normal' %}
          📦 Application Deployment Summary:
          Mode: {{ 'Selected Apps (' + apps_to_deploy + ')' if apps_to_deploy is defined and apps_to_deploy != '' else (deploy_mode | default('all apps')) }}

          🌐 Deployed Applications:
          {% for app in apps %}
          {% if apps_to_deploy is not defined or apps_to_deploy == '' or app.name in (apps_to_deploy.split(',') | map('trim') | list) %}
          - {{ app.name }}: https://{{ app.hostname }}
          {% endif %}
          {% endfor %}

          💡 Usage Examples:
          # Apps only: ansible-playbook playbooks/deploy.yml -e apps_to_deploy="app1,app2"
          # New apps only: ansible-playbook playbooks/deploy.yml -e deploy_mode="new-only"
          # Full setup: ansible-playbook playbooks/deploy.yml -e infrastructure_setup=true
          # Caddy + apps: ansible-playbook playbooks/deploy.yml -e caddy_setup=true

          {% elif deployment_mode == 'branch' %}
          🌿 Branch Deployment Complete:
          Branch: {{ deploy_branch }}
          {% elif deployment_mode == 'rollback' %}
          🔄 Rollback Complete:
          Target: {{ target_release }}
          {% if not restore_database | default(false) %}
          ⚠️  Code rolled back, database unchanged
          💡 Use -e restore_database=true to also restore database
          {% endif %}
          {% endif %}

          📝 Quick Commands:
          # App status: ansible digitalocean -m shell -a "cd /opt/APP_NAME/current && docker compose ps"
          # App logs: ansible digitalocean -m shell -a "cd /opt/APP_NAME/current && docker compose logs"
          # Releases: ansible digitalocean -m shell -a "ls -la /opt/APP_NAME/releases/"
