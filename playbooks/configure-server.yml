---
- name: Stage 1 - Initial Server Setup (as root)
  hosts: digitalocean
  become: yes
  gather_facts: yes
  vars_files:
    - ../group_vars/all.yml

  tasks:
    - name: Debug - Check root's authorized_keys content
      shell: "cat /root/.ssh/authorized_keys || echo 'File not found'"
      register: root_keys
      changed_when: false

    - name: Debug - Display root's authorized_keys
      debug:
        msg: "Root's authorized keys:\n{{ root_keys.stdout }}"

    - name: Load environment variables
      include_tasks: ../tasks/load_env.yml

    - name: Validate required environment variables
      fail:
        msg: "Required environment variable {{ item }} is not set. Please check your .env file or set it manually."
      when: (vars[item] is not defined or vars[item] == "") and (lookup('env', item) == "")
      loop:
        - ROOT_PASSWORD
        - SERVER_USERNAME

    - name: Set root password (for emergency access)
      user:
        name: root
        password: "{{ root_password | password_hash('sha512') }}"
      tags: security

    - name: Create server user
      user:
        name: "{{ server_user }}"
        shell: /bin/bash
        create_home: yes
        groups: sudo
        append: yes

    - name: Set up SSH key for server user
      block:
        - name: Debug - Ensure root's authorized_keys exists and is readable
          stat:
            path: /root/.ssh/authorized_keys
          register: auth_keys_stat

        - name: Debug - Show authorized_keys file status
          debug:
            msg:
              - "File exists: {{ auth_keys_stat.stat.exists }}"
              - "File permissions: {{ auth_keys_stat.stat.mode }}"
              - "File owner: {{ auth_keys_stat.stat.pw_name }}"

        - name: Ensure .ssh directory exists for server user
          file:
            path: "/home/{{ server_user }}/.ssh"
            state: directory
            owner: "{{ server_user }}"
            group: "{{ server_user }}"
            mode: "0700"

        - name: Copy SSH authorized_keys from root to server user
          copy:
            src: /root/.ssh/authorized_keys
            dest: "/home/{{ server_user }}/.ssh/authorized_keys"
            remote_src: yes
            owner: "{{ server_user }}"
            group: "{{ server_user }}"
            mode: "0600"

        - name: Debug - Check server user's authorized_keys content
          shell: "cat /home/{{ server_user }}/.ssh/authorized_keys || echo 'File not found'"
          register: user_keys
          changed_when: false

        - name: Debug - Display server user's authorized_keys
          debug:
            msg: "Server user's authorized keys:\n{{ user_keys.stdout }}"

    - name: Allow passwordless sudo for server user
      lineinfile:
        path: /etc/sudoers.d/{{ server_user }}
        line: "{{ server_user }} ALL=(ALL) NOPASSWD:ALL"
        state: present
        mode: "0440"
        create: yes
        validate: "visudo -cf %s"

    - name: Update inventory to use server user for subsequent connections
      add_host:
        name: "{{ inventory_hostname }}"
        ansible_host: "{{ ansible_host }}"
        ansible_user: "{{ server_user }}"
        ansible_ssh_private_key_file: "{{ ansible_ssh_private_key_file | default(omit) }}"
        groups: digitalocean_configured

    - name: Pause for a moment before attempting new connection
      pause:
        seconds: 10

    - name: Test connection to new user (without sudo)
      wait_for_connection:
        delay: 5
        timeout: 60
      vars:
        ansible_user: "{{ server_user }}"
        ansible_become: no # Don't use sudo for this test


