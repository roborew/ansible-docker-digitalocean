---
- name: Deploy SSH Keys for Private Repositories
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - ../group_vars/all.yml

  tasks:
    - name: "🔑 SSH Key Management for Applications"
      debug:
        msg: "Setting up SSH keys for private repositories..."

    - name: Load apps configuration
      include_vars:
        file: "{{ playbook_dir }}/../group_vars/prod.yml"
        name: prod_config

    - name: Create SSH keys directory
      file:
        path: "{{ playbook_dir }}/../files/ssh_keys"
        state: directory
        mode: "0700"

    - name: Check for existing deploy keys
      stat:
        path: "{{ playbook_dir }}/../files/ssh_keys/{{ item.name }}_deploy_key"
      register: deploy_key_files
      loop: "{{ prod_config.apps | default([]) }}"

    - name: Generate missing deploy keys
      shell: |
        ssh-keygen -t ed25519 -f "{{ playbook_dir }}/../files/ssh_keys/{{ item.item.name }}_deploy_key" -C "deploy@{{ item.item.name }}.com" -N ""
        chmod 600 "{{ playbook_dir }}/../files/ssh_keys/{{ item.item.name }}_deploy_key"
        chmod 644 "{{ playbook_dir }}/../files/ssh_keys/{{ item.item.name }}_deploy_key.pub"
      loop: "{{ deploy_key_files.results }}"
      when: not item.stat.exists
      register: new_keys_generated

    - name: Display new deploy keys that need to be added to GitHub
      block:
        - name: Show instructions for new keys
          debug:
            msg: |
              🔑 NEW DEPLOY KEY GENERATED for {{ item.item.item.name }}!

              📋 Add this PUBLIC key to your GitHub repository:
              Repository: {{ item.item.item.repo }}
              Path: Settings → Deploy keys → Add deploy key
              Title: {{ item.item.item.name }}-server-deploy

              🔐 PUBLIC KEY:
              {{ lookup('file', playbook_dir + '/../files/ssh_keys/' + item.item.item.name + '_deploy_key.pub') }}

              ✅ Check 'Allow write access' if needed
              ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
          loop: "{{ new_keys_generated.results }}"
          when: new_keys_generated is defined and item.changed

        - name: Wait for user to add keys to GitHub
          pause:
            prompt: |

              🚨 ACTION REQUIRED: Add the deploy keys shown above to your GitHub repositories.

              {% for key_result in new_keys_generated.results %}
              {% if key_result.changed %}
              🔑 {{ key_result.item.item.name }} - PUBLIC KEY:
              {{ lookup('file', playbook_dir + '/../files/ssh_keys/' + key_result.item.item.name + '_deploy_key.pub') }}

              📋 Add to: {{ key_result.item.item.repo }}
              🔗 Go to: https://github.com/roborew/{{ key_result.item.item.repo.split('/')[-1].replace('.git', '') }}/settings/keys
              📝 Title: {{ key_result.item.item.name }}-server-deploy
              ✅ Check "Allow write access" if needed

              ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
              {% endif %}
              {% endfor %}

              Instructions:
              1. Copy the public key(s) shown above
              2. Go to the GitHub repository settings
              3. Click "Add deploy key"
              4. Paste the public key
              5. Give it the title shown above
              6. Check "Allow write access" if you need push capability
              7. Click "Add key"

              Press ENTER when you have added all the keys to GitHub...
          when: new_keys_generated is defined and new_keys_generated.results | selectattr('changed') | list | length > 0

    - name: Deploy SSH keys to servers
      block:
        - name: Create .ssh directory for apps_user
          file:
            path: "/home/{{ server_user }}/.ssh"
            state: directory
            mode: "0700"
            owner: "{{ server_user }}"
            group: "{{ server_user }}"
          delegate_to: "{{ item }}"
          become: true
          loop: "{{ groups['digitalocean'] | default([]) }}"

        - name: Deploy private keys to apps_user
          copy:
            src: "{{ playbook_dir }}/../files/ssh_keys/{{ item[1].name }}_deploy_key"
            dest: "/home/{{ server_user }}/.ssh/{{ item[1].name }}_deploy_key"
            mode: "0600"
            owner: "{{ server_user }}"
            group: "{{ server_user }}"
          delegate_to: "{{ item[0] }}"
          become: true
          loop: "{{ groups['digitalocean'] | default([]) | product(prod_config.apps | default([])) | list }}"

        - name: Create SSH config for deploy keys in apps_user home
          blockinfile:
            path: "/home/{{ server_user }}/.ssh/config"
            create: true
            mode: "0600"
            owner: "{{ server_user }}"
            group: "{{ server_user }}"
            marker: "# {mark} ANSIBLE MANAGED BLOCK - {{ item[1].name }}"
            block: |
              Host github.com-{{ item[1].name }}
                  HostName github.com
                  User git
                  IdentityFile ~/.ssh/{{ item[1].name }}_deploy_key
                  IdentitiesOnly yes
          delegate_to: "{{ item[0] }}"
          become: true
          loop: "{{ groups['digitalocean'] | default([]) | product(prod_config.apps | default([])) | list }}"

        - name: Test SSH connection to GitHub as apps_user
          shell: ssh -T github.com-{{ item[1].name }}
          delegate_to: "{{ item[0] }}"
          become: true
          become_user: "{{ server_user }}"
          loop: "{{ groups['digitalocean'] | default([]) | product(prod_config.apps | default([])) | list }}"
          register: ssh_test
          failed_when: false
          changed_when: false

        - name: Display SSH test results
          debug:
            msg: |
              SSH Test for {{ item.item[1].name }} on {{ item.item[0] }}: 
              {{ 'SUCCESS' if 'successfully authenticated' in item.stderr else 'FAILED' }}
              {{ item.stderr if item.stderr else item.stdout }}
          loop: "{{ ssh_test.results }}"
          when: ssh_test is defined

    - name: "🎉 SSH Key Deployment Complete"
      debug:
        msg: |
          All SSH keys have been deployed to servers!
          ✅ Deploy keys generated for missing apps
          ✅ Private keys deployed to servers  
          ✅ SSH config updated
          ✅ GitHub connections tested

          🚀 Ready for deployment!
