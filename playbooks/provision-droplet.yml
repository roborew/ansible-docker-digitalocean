---
- name: Provision DigitalOcean Droplet
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - ../group_vars/all.yml
  vars_prompt:
    - name: droplet_name
      prompt: "Enter droplet name"
      private: false
      default: "ansible-droplet"

    - name: droplet_count
      prompt: "Number of droplets to create"
      private: false
      default: "1"

  tasks:
    - name: Get DO_API_TOKEN from environment
      set_fact:
        do_token: "{{ lookup('env', 'DO_API_TOKEN') }}"

    - name: Ensure DO_API_TOKEN is set
      fail:
        msg: "Please set DO_API_TOKEN environment variable"
      when: do_token == "" or do_token is undefined

    - name: Create DigitalOcean droplet
      community.digitalocean.digital_ocean_droplet:
        state: present
        name: "{{ droplet_name }}-{{ item }}"
        oauth_token: "{{ do_token }}"
        size: "{{ do_size }}"
        region: "{{ do_region }}"
        image: "{{ do_image }}"
        ssh_keys: "{{ do_ssh_keys }}"
        wait_timeout: 600
        unique_name: true
      register: droplet_result
      loop: "{{ range(1, droplet_count|int + 1) | list }}"

    - name: Display droplet information
      debug:
        msg: |
          Droplet created successfully!
          Name: {{ item.data.droplet.name }}
          IP: {{ item.data.droplet.networks.v4[0].ip_address }}
          ID: {{ item.data.droplet.id }}
      loop: "{{ droplet_result.results }}"
      when: item.changed

    - name: Wait for SSH to become available
      wait_for:
        host: "{{ item.data.droplet.networks.v4[0].ip_address }}"
        port: 22
        delay: 30
        timeout: 300
      loop: "{{ droplet_result.results }}"
      when: item.changed

    - name: Add droplet to inventory
      add_host:
        name: "{{ item.data.droplet.name }}"
        ansible_host: "{{ item.data.droplet.networks.v4[0].ip_address }}"
        ansible_user: root
        groups: digitalocean
      loop: "{{ droplet_result.results }}"
      when: item.changed

    - name: Save droplet IPs to file
      copy:
        content: |
          # Generated droplet IPs - {{ ansible_date_time.iso8601 }}
          {% for result in droplet_result.results %}
          {% if result.changed %}
          {{ result.data.droplet.name }}: {{ result.data.droplet.networks.v4[0].ip_address }}
          {% endif %}
          {% endfor %}
        dest: "./droplet_ips.txt"
      when: droplet_result.results | selectattr('changed') | list | length > 0
