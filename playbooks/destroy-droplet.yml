---
- name: Destroy DigitalOcean Droplets
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - ../group_vars/all.yml
  vars_prompt:
    - name: droplet_name_pattern
      prompt: "Enter droplet name or pattern to destroy (use * for wildcards)"
      private: false

    - name: confirm_destroy
      prompt: "Are you sure you want to destroy these droplets? (yes/no)"
      private: false

  tasks:
    - name: Fail if not confirmed
      fail:
        msg: "Destruction cancelled by user"
      when: confirm_destroy != "yes"

    - name: Get DO_API_TOKEN from environment
      set_fact:
        do_token: "{{ lookup('env', 'DO_API_TOKEN') }}"

    - name: Ensure DO_API_TOKEN is set
      fail:
        msg: "Please set DO_API_TOKEN environment variable"
      when: do_token == "" or do_token is undefined

    - name: Get list of droplets
      community.digitalocean.digital_ocean_droplet_info:
        oauth_token: "{{ do_token }}"
      register: all_droplets

    - name: Filter droplets by name pattern
      set_fact:
        droplets_to_destroy: "{{ all_droplets.data | selectattr('name', 'match', droplet_name_pattern.replace('*', '.*')) | list }}"

    - name: Display droplets to be destroyed
      debug:
        msg: |
          Droplet to destroy:
          Name: {{ item.name }}
          IP: {{ item.networks.v4[0].ip_address if item.networks.v4 else 'N/A' }}
          ID: {{ item.id }}
      loop: "{{ droplets_to_destroy }}"

    - name: Confirm destruction
      pause:
        prompt: "Press Enter to continue with destruction, or Ctrl+C to cancel"
      when: droplets_to_destroy | length > 0

    - name: Destroy droplets
      community.digitalocean.digital_ocean_droplet:
        state: absent
        id: "{{ item.id }}"
        oauth_token: "{{ do_token }}"
      loop: "{{ droplets_to_destroy }}"
      register: destroy_result

    - name: Display destruction results
      debug:
        msg: "Droplet {{ item.item.name }} (ID: {{ item.item.id }}) has been destroyed"
      loop: "{{ destroy_result.results }}"
      when: item.changed

    - name: No droplets found message
      debug:
        msg: "No droplets found matching pattern: {{ droplet_name_pattern }}"
      when: droplets_to_destroy | length == 0
