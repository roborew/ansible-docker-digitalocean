---
- name: Create proxy network
  docker_network:
    name: "{{ caddy_network_name }}"
    driver: bridge

- name: Create Caddy data volume
  docker_volume:
    name: "{{ caddy_data_volume }}"

- name: Create Caddy config volume
  docker_volume:
    name: "{{ caddy_config_volume }}"

- name: Stop existing Caddy container if running
  docker_container:
    name: "{{ caddy_container_name }}"
    state: absent
    force_kill: yes

- name: Start Caddy Docker Proxy container
  docker_container:
    name: "{{ caddy_container_name }}"
    image: "{{ caddy_image }}"
    state: started
    restart_policy: unless-stopped
    networks:
      - name: "{{ caddy_network_name }}"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "{{ caddy_data_volume }}:/data"
      - "{{ caddy_config_volume }}:/config"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    env:
      CADDY_INGRESS_NETWORKS: "{{ caddy_network_name }}"
      CADDY_DOCKER_LABEL_PREFIX: "caddy"
      CADDY_ACME_AGREE: "true"
      CADDY_EMAIL: "{{ caddy_email }}"
    labels:
      caddy_docker_proxy: "true"

- name: Wait for Caddy container to start
  wait_for:
    port: 80
    host: "127.0.0.1" # Check locally instead of external IP
    delay: 5
    timeout: 60
    state: started # Just check if port is listening

- name: Verify Caddy container is running
  docker_container_info:
    name: "{{ caddy_container_name }}"
  register: caddy_info
  failed_when: not caddy_info.container.State.Running

- name: Check Caddy admin API is accessible (from within container)
  shell: docker exec {{ caddy_container_name }} curl -s -f http://localhost:2019/config/ -o /dev/null
  register: caddy_admin_check
  retries: 3
  delay: 2
  changed_when: false

- name: Display Caddy proxy status
  debug:
    msg: |
      ‚úÖ Caddy Docker Proxy is running!
      - Container: {{ caddy_container_name }}
      - Network: {{ caddy_network_name }}
      - Image: {{ caddy_image }}
      - Admin API: http://127.0.0.1:2019
      - Config endpoint: http://127.0.0.1:2019/config
      - Data volume: {{ caddy_data_volume }}
      - Config volume: {{ caddy_config_volume }}

      üìù Note: Caddy starts with empty configuration
      ‚û°Ô∏è  Applications will be auto-configured when deployed

      üåê External access will be available at:
      - HTTP: http://{{ ansible_default_ipv4.address }}
      - HTTPS: https://{{ ansible_default_ipv4.address }}
      (once applications are deployed)
